{"version":3,"file":"get_stats.min.js","sources":["../src/get_stats.js"],"sourcesContent":["export const init = () => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', M.cfg.wwwroot + '/blocks/usercoursestatistics/get_stats.php', true);\n\n    xhr.onload = function() {\n        if (xhr.status === 200) {\n            // Successful response from server.\n            const response = JSON.parse(xhr.responseText);\n\n            // Update template with response data.\n            if (response.showenrolledcourses == 1) {\n                document.getElementById('enrolled-courses-count').textContent = response.enrolledcourses;\n            }\n            if (response.showinprogresscourses == 1) {\n                document.getElementById('inprogress-courses-count').textContent = response.inprogresscourses;\n            }\n            if (response.showcompletedcourses == 1) {\n                document.getElementById('completed-courses-count').textContent = response.completedcourses;\n            }\n            if (response.showbadges == 1) {\n                document.getElementById('badges-count').textContent = response.badges;\n            }\n            if (response.showcertificates == 1) {\n                document.getElementById('certificates-count').textContent = response.certificates;\n            }\n            if (response.showlearningplans == 1) {\n                document.getElementById('learning-plans').textContent = response.learningplans;\n            }\n            if (response.showcompletedlearningplans == 1) {\n                document.getElementById('completed-learning-plans').textContent = response.completedlearningplans;\n            }\n            document.getElementById('active-time').textContent = response.activetime;\n        } else {\n            // Error handling.\n            console.log('Error:', xhr.statusText);\n        }\n    };\n\n    xhr.onerror = function() {\n        // Error handling.\n        console.log('Error:', xhr.statusText);\n    };\n\n    xhr.send();\n};"],"names":["_exports","init","xhr","XMLHttpRequest","open","M","cfg","wwwroot","onload","status","response","JSON","parse","responseText","showenrolledcourses","document","getElementById","textContent","enrolledcourses","showinprogresscourses","inprogresscourses","showcompletedcourses","completedcourses","showbadges","badges","showcertificates","certificates","showlearningplans","learningplans","showcompletedlearningplans","completedlearningplans","activetime","console","log","statusText","onerror","send"],"mappings":"2JA4CEA,SAAAC,KA5CkBA,KAChB,MAAMC,IAAM,IAAIC,eAChBD,IAAIE,KAAK,MAAOC,EAAEC,IAAIC,QAAU,8CAA8C,GAE9EL,IAAIM,OAAS,WACT,GAAmB,MAAfN,IAAIO,OAAgB,CAEpB,MAAMC,SAAWC,KAAKC,MAAMV,IAAIW,cAGI,GAAhCH,SAASI,sBACTC,SAASC,eAAe,0BAA0BC,YAAcP,SAASQ,iBAEvC,GAAlCR,SAASS,wBACTJ,SAASC,eAAe,4BAA4BC,YAAcP,SAASU,mBAE1C,GAAjCV,SAASW,uBACTN,SAASC,eAAe,2BAA2BC,YAAcP,SAASY,kBAEnD,GAAvBZ,SAASa,aACTR,SAASC,eAAe,gBAAgBC,YAAcP,SAASc,QAElC,GAA7Bd,SAASe,mBACTV,SAASC,eAAe,sBAAsBC,YAAcP,SAASgB,cAEvC,GAA9BhB,SAASiB,oBACTZ,SAASC,eAAe,kBAAkBC,YAAcP,SAASkB,eAE1B,GAAvClB,SAASmB,6BACTd,SAASC,eAAe,4BAA4BC,YAAcP,SAASoB,wBAE/Ef,SAASC,eAAe,eAAeC,YAAcP,SAASqB,UAClE,MAEIC,QAAQC,IAAI,SAAU/B,IAAIgC,aAIlChC,IAAIiC,QAAU,WAEVH,QAAQC,IAAI,SAAU/B,IAAIgC,aAG9BhC,IAAIkC,MAAM,CACZ"}